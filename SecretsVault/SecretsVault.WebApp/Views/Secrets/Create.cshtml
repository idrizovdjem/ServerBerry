@{ 
    ViewData["Title"] = "Create secret";
}

<main class="container">
    <form id="form" class="col-6 offset-3" asp-controller="Secrets" asp-action="Create" method="post">
        <h3 class="mb-4">Create secret</h3>

        <input type="hidden" name="ApplicationId" value="@ViewData["ApplicationId"]" />

        <div class="form-group">
            <label>Key</label>
            <input class="form-control" name="Key" placeholder="Key" id="keyInput"/>
        </div>

        <div class="form-group">
            <label>Environment</label>
            <input class="form-control" name="Environment" placeholder="Environment" id="environmentInput" />
        </div>

        <div class="form-group">
            <label>Value</label>
            <input class="form-control" name="Value" placeholder="Value" />
        </div>

        <button class="btn btn-primary" id="createButton">Create</button>
        <button class="btn btn-secondary" id="cancelButton">Cancel</button>
    </form>
</main>

@section Scripts {
    <script async>
        const cancelButton = document.getElementById('cancelButton');
        const keyInput = document.getElementById('keyInput');
        const environmentInput = document.getElementById('environmentInput');
        const createButton = document.getElementById('createButton');
        const form = document.getElementById('form');

        cancelButton.onclick = (event) => {
            event.preventDefault();
            location.replace("/Applications/Overview?applicationId=@ViewData["ApplicationId"]");
        }

        createButton.onclick = async (event) => {
            event.preventDefault();

            const key = keyInput.value;
            const environment = environmentInput.value;

            const keyAvailable = await isKeyAvailable(key, environment);
            if(keyAvailable === false) {
                alert('Invalid key');
                return;
            }

           form.submit(); 
        }

        async function isKeyAvailable(key, environment) {
            return await fetch('/api/secrets/IsKeyAvailable', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ key, environment, applicationId: '@ViewData["ApplicationId"]' })
            })
                .then(response => response.json())
                .then(data => data)
                .catch(error => false);
        }
    </script>
}